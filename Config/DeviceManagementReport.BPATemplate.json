{
  "style": "Table",
  "Fields": [
    {
      "UseExistingInfo": false,
      "FrontendFields": [
        {
          "name": "Password Never Expires",
          "value": "PasswordNeverExpires",
          "formatter": "bool"
        }
      ],
      "name": "PasswordNeverExpires",
      "API": "Graph",
      "URL": "https://graph.microsoft.com/beta/domains",
      "ExtractFields": [
        "passwordValidityPeriodInDays"
      ],
      "where": "$_.passwordValidityPeriodInDays -eq 2147483647",
      "StoreAs": "bool"
    },
    {
      "UseExistingInfo": false,
      "FrontendFields": [
        {
          "name": "OAuth App Consent",
          "value": "OAuthAppConsent",
          "formatter": "bool"
        }
      ],
      "name": "OAuthAppConsent",
      "API": "Graph",
      "URL": "https://graph.microsoft.com/v1.0/policies/authorizationPolicy?$select=defaultUserRolePermissions",
      "ExtractFields": [
        "defaultuserrolepermissions"
      ],
      "where": "'ManagePermissionGrantsForSelf.microsoft-user-default-legacy' -notin $_.defaultuserrolepermissions.permissionGrantPoliciesAssigned",
      "StoreAs": "bool"
    },
    {
      "UseExistingInfo": false,
      "FrontendFields": [
        {
          "name": "Unified Audit Log",
          "value": "UnifiedAuditLog",
          "formatter": "bool"
        }
      ],
      "name": "UnifiedAuditLog",
      "API": "Exchange",
      "Command": "Get-AdminAuditLogConfig",
      "ExtractFields": [
        "UnifiedAuditLogIngestionEnabled"
      ],
      "StoreAs": "bool"
    },
    {
      "UseExistingInfo": false,
      "FrontendFields": [
        {
          "name": "MFA Registration Campaign Enabled",
          "value": "MFANudgeState",
          "formatter": "bool"
        }
      ],
      "name": "MFANudgeState",
      "API": "Graph",
      "URL": "https://graph.microsoft.com/beta/policies/authenticationMethodsPolicy",
      "ExtractFields": [
        "registrationEnforcement"
      ],
      "StoreAs": "bool",
      "where": "$_.registrationEnforcement.authenticationMethodsRegistrationCampaign.state -eq 'Enabled'"
    },
    {
      "UseExistingInfo": false,
      "FrontendFields": [
        {
          "name": "Temporary Access Pass Enabled",
          "value": "TAPEnabled",
          "formatter": "bool"
        }
      ],
      "name": "TAPEnabled",
      "API": "Graph",
      "URL": "https://graph.microsoft.com/beta/policies/authenticationmethodspolicy/authenticationMethodConfigurations/TemporaryAccessPass",
      "ExtractFields": [
        "State"
      ],
      "StoreAs": "bool"
    },
    {
      "UseExistingInfo": false,
      "FrontendFields": [
        {
          "name": "Secure Defaults State Enabled",
          "value": "SecureDefaultState",
          "formatter": "warnBool"
        }
      ],
      "name": "SecureDefaultState",
      "API": "Graph",
      "URL": "https://graph.microsoft.com/beta/policies/identitySecurityDefaultsEnforcementPolicy",
      "ExtractFields": [
        "IsEnabled"
      ],
      "StoreAs": "bool"
    },
    {
      "UseExistingInfo": false,
      "FrontendFields": [
        {
          "name": "Anonymous Privacy Reports",
          "value": "AnonymousPrivacyReports",
          "formatter": "reverseBool"
        }
      ],
      "name": "AnonymousPrivacyReports",
      "API": "Graph",
      "URL": "https://graph.microsoft.com/beta/admin/reportSettings",
      "ExtractFields": [
        "displayConcealedNames"
      ],
      "StoreAs": "bool",
      "where": "$_.displayConcealedNames -eq $false"
    },
    {
      "UseExistingInfo": false,
      "FrontendFields": [
        {
          "name": "Message Copy for Sent-As Disabled",
          "formatter": "table",
          "value": "MessageCopyforSentAsDisabled"
        }
      ],
      "name": "MessageCopyforSentAsDisabled",
      "API": "Exchange",
      "Command": "Get-Mailbox",
      "Parameters": {
        "RecipientTypeDetails": [
          "SharedMailbox",
          "UserMailbox"
        ]
      },
      "where": "$_.MessageCopyForSentAsEnabled -eq $false",
      "ExtractFields": [
        "userprincipalname",
        "messageCopyForSentAsEnabled"
      ],
      "StoreAs": "JSON"
    },
    {
      "UseExistingInfo": false,
      "FrontendFields": [
        {
          "name": "Shared Mailboxes with enabled users",
          "formatter": "table",
          "value": "SharedMailboxeswithenabledusers"
        }
      ],
      "name": "SharedMailboxeswithenabledusers",
      "API": "Exchange",
      "Command": "Get-Mailbox",
      "Parameters": {
        "RecipientTypeDetails": "SharedMailbox"
      },
      "where": "$_.accountDisabled -eq $false",
      "ExtractFields": [
        "userprincipalname",
        "accountDisabled"
      ],
      "StoreAs": "JSON"
    },
    {
      "UseExistingInfo": false,
      "FrontendFields": [
        {
          "name": "Unused licenses",
          "formatter": "table",
          "value": "Unusedlicenses"
        }
      ],
      "name": "Unusedlicenses",
      "API": "CIPPFunction",
      "Command": "Get-CIPPLicenseOverview",
      "ExtractFields": [
        "License",
        "TotalLicenses",
        "availableUnits",
        "CountUsed"
      ],
      "StoreAs": "JSON",
      "where": "$_.availableUnits -gt 0"
    },
    {
      "UseExistingInfo": false,
      "FrontendFields": [
        {
          "name": "Current Secure Score",
          "value": "CurrentSecureScore.currentScore"
        },
        {
          "name": "Max Secure Score",
          "value": "CurrentSecureScore.maxScore"
        },
        {
          "name": "Average Comparative Score (All Tenants)",
          "value": "CurrentSecureScore.averageComparativeScores[0].averageScore"
        },
        {
          "name": "Average Comparative Score (Similiar Size Tenants)",
          "value": "CurrentSecureScore.averageComparativeScores[1].averageScore"
        }
      ],
      "name": "CurrentSecureScore",
      "API": "Graph",
      "URL": "https://graph.microsoft.com/beta/security/secureScores?$top=1",
      "Parameters": {
        "Nopagination": true
      },
      "ExtractFields": [
        "currentScore",
        "maxScore",
        "averageComparativeScores"
      ],
      "StoreAs": "JSON"
    }
  ],
  "name": "CIPP Best Practices v1.0 - Table view"
}




ChatGPT
To convert the PowerShell script into a JSON format similar to the provided example, we need to map the script's functionalities and the corresponding API calls into a structured JSON object. The PowerShell script focuses on retrieving and processing device information from Microsoft Graph, so the JSON structure will reflect that. Here's a conversion that aligns with the given JSON structure:

json
Copy code
{
  "style": "Table",
  "Fields": [
    {
      "UseExistingInfo": false,
      "FrontendFields": [
        {
          "name": "Device Name",
          "value": "Device",
          "formatter": "string"
        },
        {
          "name": "Device ID",
          "value": "Id",
          "formatter": "string"
        },
        {
          "name": "Last Sign In",
          "value": "LastSignIn",
          "formatter": "datetime"
        },
        {
          "name": "Is Managed",
          "value": "isManaged",
          "formatter": "bool"
        },
        {
          "name": "Owner Display Name",
          "value": "Owner",
          "formatter": "string"
        },
        {
          "name": "Owner User Principal Name",
          "value": "OwnerUPN",
          "formatter": "string"
        },
        {
          "name": "Department",
          "value": "Department",
          "formatter": "string"
        },
        {
          "name": "Office Location",
          "value": "Office",
          "formatter": "string"
        },
        {
          "name": "User GUID",
          "value": "UserGUID",
          "formatter": "string"
        },
        {
          "name": "City",
          "value": "City",
          "formatter": "string"
        },
        {
          "name": "Country",
          "value": "Country",
          "formatter": "string"
        },
        {
          "name": "Operating System",
          "value": "Operating System",
          "formatter": "string"
        },
        {
          "name": "Operating System Version",
          "value": "O/S Version",
          "formatter": "string"
        },
        {
          "name": "Registration Date",
          "value": "Registered",
          "formatter": "datetime"
        },
        {
          "name": "Account Enabled",
          "value": "Account Enabled",
          "formatter": "bool"
        },
        {
          "name": "Device ID",
          "value": "DeviceId",
          "formatter": "string"
        },
        {
          "name": "Device Model",
          "value": "DeviceModel",
          "formatter": "string"
        },
        {
          "name": "Device Serial Number",
          "value": "DeviceserialNumber",
          "formatter": "string"
        },
        {
          "name": "Device SKU Family",
          "value": "DeviceskuFamily",
          "formatter": "string"
        },
        {
          "name": "Device Manufacturer",
          "value": "DevicManufact",
          "formatter": "string"
        },
        {
          "name": "Trust Type",
          "value": "TrustType",
          "formatter": "string"
        }
      ],
      "name": "DeviceInformation",
      "API": "Graph",
      "URL": "https://graph.microsoft.com/beta/devices",
      "ExtractFields": [
        "displayName",
        "id",
        "approximateLastSignInDateTime",
        "isManaged",
        "registeredOwners",
        "department",
        "officeLocation",
        "userPrincipalName",
        "city",
        "country",
        "operatingSystem",
        "operatingSystemVersion",
        "registrationDateTime",
        "accountEnabled",
        "deviceId",
        "model",
        "serialNumber",
        "skuFamily",
        "manufacturer",
        "trustType"
      ],
      "StoreAs": "JSON"
    }
  ],
  "name": "Device Management Report"
}
